worker_processes 1;

events {
    worker_connections 1024;
}



http {

    proxy_cache_path /dist levels=1:2
    keys_zone=my_cache:6m max_size=5g 
                 inactive=30m use_temp_path=off;

    server {
        listen 80;
        # Set to servername
        server_name localhost;

        access_log /dev/stdout;
        error_log /dev/stdout info;

        # Fix serving plain text when file is js or css
        include /etc/nginx/mime.types;

    
        # Set location to serve static assets
        location /dist {
            alias /static/dist;
        }

        # Send traffic to bocadiilo application
    location / {
        proxy_set_header   Host                 $host;
        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto    $scheme;
        proxy_set_header   X-Forwarded-Host     $server_name;
        proxy_set_header   X-Cache-Status       $upstream_cache_status;

        

        # Enable cache
        proxy_cache my_cache;
        # Use cache when website not available
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        # Serve cache until the client fully downloads the new files
        proxy_cache_background_update on;
        # If a client request a file not in cache only one request is allowed to hit server
        proxy_cache_lock on;
        # Save bandwidth ngincx sends if-modified-since header 
        proxy_cache_revalidate on;

        proxy_pass http://bocadilloweb:80;
    }
}
}